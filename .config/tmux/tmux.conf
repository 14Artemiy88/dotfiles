# Префикс
unbind r
bind r source-file  $HOME/.config/tmux/tmux.conf
set -g prefix `

set -g default-command "/bin/zsh -l"

# set-option -g default-terminal '$TERM'
# set-option -g terminal-overrides 'xterm-256color:RGB'
# set-option -g focus-events on # TODO: learn how this works

set -g status-justify right      # window position
set -g base-index 1              # start indexing windows at 1 instead of 0
set -g detach-on-destroy off     # don't exit from tmux when closing a session
set -g escape-time 0             # zero-out escape time delay
set -g history-limit 1000000     # increase history size (from 2,000)
set -g mouse on                  # enable mouse support
set -g renumber-windows on       # renumber all windows when any window is closed
set -g set-clipboard on          # use system clipboard
set -g status-interval 1         # update the status bar every 3 seconds
set -g status-left-length 200    # increase length (from 10)
set -g status-right-length 200   # increase length (from 10)
set -g status-position bottom    # macOS / darwin style
# set -g status-style 'bg=#222222' # transparent

VAR='#{=4:#(ps --no-headers -t #{pane_tty} -o args -O-c)}'
NVIM='?#{==:'$VAR',nvim}'
MICRO='?#{==:'$VAR',micr}'
BTOP='?#{==:'$VAR',btop}'

# %if #{==:'$VAR',nvim}
# COLOR=bg=#222222
# %else
# COLOR=default
# %endif

set -g status-style '#{'$NVIM',bg=#222222,#{'$MICRO',bg=#222222,#{'$BTOP',bg=#333333,default}}}'

set-window-option -g xterm-keys off


set -g message-command-style 'bg=default,fg=yellow'
set -g message-style 'bg=default,fg=yellow'
set -g mode-style 'reverse'

# setw -g mode-keys vi
set -g pane-active-border-style 'fg=cyan,bg=default'
set -g pane-border-style 'fg=brightblack,bg=default'


set -g allow-passthrough on

set -ag update-environment TERM
set -ag update-environment TERM_PROGRAM


# set -ag status-format[1] '#H' # Имя хоста локального компьютера
# set -ag status-format[1] '#F' # Текущий флаг окна
# set -ag status-format[1] '#I' # номер текущего (активного) окна
# set -ag status-format[1] '#P' # Список всех фреймов
# set -ag status-format[1] '#S' # Имя сессии
# set -ag status-format[1] '#T' # Заголовок текущего окна
# set -ag status-format[1] '#W' # Имя текущего окна



# bind-key x if-shell '[ #{pane_index} -eq 0 ]' {
#     # comment
#     select-pane -R
#
#     send-keys hello1
#  } {
#     # comment
#     select-pane -L
#
#     send-keys hello2
#  }


# bind K {
# 	if -F '#{==:#{window_name},ksh}' {
# 		kill-window
# 	} {
# 		display 'not killing window'
# 	}
# }


##########################################################
#                                                        #
# ######  ####  ##  ## ######    ### ##    ##  ##  ####  #
# ##  ## ##  ## ##  ## ##       # ## ##    ## ##  ##  ## #
# ##  ## ###### ###### ####    #  ## ##### ####   ###### #
# ##  ## ##  ## ##  ## ##     ##  ## ## ## ## ##  ##  ## #
# ##  ## ##  ## ##  ## ###### ##  ## ##### ##  ## ##  ## #
#                                                        #
##########################################################

set -g status 4
set -g status-format[0] ''
#######################
#                     #
#         TOP         #
#                     #
#######################
# LEFT

TPATH='#{s|'$HOME'|~|:pane_current_path}'
TPATH='#{s|/media/artemiy/|󱊟 |:'$TPATH'}'
TPATH='#{s|3fe68576-1a13-42fc-94c3-a6e34f218cf4|SSD|:'$TPATH'}'
TPATH='#{s|󱊟 SSD/Apps|~/Apps|:'$TPATH'}'
TPATH='#{s|󱊟 SSD/WORK|~/WORK|:'$TPATH'}'

set -g  status-format[1] '#[align=left]'
P='#{=31:'$TPATH'}'
WORK='~/WORK'
TMP='/run/user/1000'
set -ag status-format[1] '#{?#{==:'$P','$WORK'/sima-land-ru}, #([ -e '$TMP'/sima-land-ru ] && echo "" || echo "")  ,}'
set -ag status-format[1] '#{?#{==:'$P','$WORK'/search}, #([ -e '$TMP'/search ] && echo "" || echo "")  ,}'

CP='cd #{pane_current_path}'
set -ag status-format[1] '#('$CP'; git branch --show-current | sed "s/^/#[fg=#cccc00]  /") #[default]'
GREP=$CP'; git status --short | grep -c'
AM=$GREP' "AM "'
 M=$GREP' "M "'
 R=$GREP' "R "'
AN=$GREP' "?? "'
 D=$GREP' "D "'
set -ag status-format[1] '#{?#('$AM'),#[fg=green  ] #('$AM'),}'
set -ag status-format[1] '#{?#('$M' ),#[fg=blue   ] #('$M'),}'
set -ag status-format[1] '#{?#('$R' ),#[fg=blue   ]󰁕 #('$R'),}'
set -ag status-format[1] '#{?#('$AN'),#[fg=yellow ]  #('$AN'),}'
set -ag status-format[1] '#{?#('$D' ),#[fg=#ffaaaa] 󱎘 #('$D'),}'

# RIGHT
set -ag status-format[1] '#[align=right]'
set -ag status-format[1] '#{?#{==:#{=6:'$TPATH'},'$WORK'},#(bash '$HOME'/.config/tmux/scripts/work.sh ),} '
set -ag status-format[1] '#{?#{==:'$P','$WORK'/sima-land-ru},#[default] #[fg=#9ce19c] #(cat '$WORK'/db.txt),}'

# CENTER
PATHLINE='───#{s|.|─|:'$TPATH'}───'
set -ag status-format[1] '#[align=absolute-centre]'
set -ag status-format[1] '#[fg=#888888]╭'$PATHLINE'╮#[default]'

########################
#                      #
#        CENTER        #
#                      #
########################
LINE='#[fg=#888888]───────────────────────────────────────────────────────────────────────────────────────────────────────────────────#[default]'
set -g  status-format[2] '#[align=left]'$LINE
set -ag status-format[2] '#[align=right]'$LINE
set -ag status-format[2] '#[align=absolute-centre]'
set -ag status-format[2] '#[fg=#888888]┤#[default]   #[fg=cyan]'$TPATH'#[default]   #[fg=#888888]├#[default]'
# set -ag status-format[2] "#(stty size | awk -F ' ' '{print $2}')"
# set -ag status-format[2] "#(stty size )"
########################
#                      #
#        BOTTOM        #
#                      #
########################
# LEFT
set -g  status-format[3] '#[align=left]'
set -ag status-format[3] " #[fg=#{?client_prefix,yellow,#{?pane_in_mode,#ffb6c1,blue}},bold]#S#[default]"
PROC='#(ps --no-headers -t #{pane_tty} -o args -O-c)'
set -ag status-format[3] '  #[fg=green]#{?#{==:'$PROC',/bin/zsh -l}, %H:%M:%S ,#{=|49|…:'$PROC'}}#[default]'
# set -ag status-format[3] ' #[fg=green] %H:%M:%S#[default]'

# RIGHT
set -ag status-format[3] '#[align=right]'
# set -ag status-format[3] '#[fg=gray]│ #[default]'
set -ag status-format[3] '#{W:#[fg=gray]#{window_name} ,#[fg=cyan,bold]#{window_name}#[default] }'

# CENTER
set -ag status-format[3] '#[align=absolute-centre]'
set -ag status-format[3] '#[fg=#888888]╰'$PATHLINE'╯#[default]'

###################################################
#                                                 #
# ##  ## ##### ##  ## #####  ###### ##  ## #####  #
# ## ##  ##     ####  ##  ##   ##   ### ## ##  ## #
# ####   ####    ##   #####    ##   ## ### ##  ## #
# ## ##  ##      ##   ##  ##   ##   ##  ## ##  ## #
# ##  ## #####   ##   #####  ###### ##  ## #####  #
#                                                 #
###################################################

unbind M-Left
unbind M-Right
bind-key -n M-Left previous-window     # на одно окно влево
bind-key -n M-Right next-window        # на одно окно вправо
bind-key -n C-M-Left switch-client -p  # выбор сессии слева
bind-key -n C-M-Right switch-client -n # выбор сессии слева

unbind %                               # Выключаем клавишу для горизонтального разбиения окна по умолчанию
bind | split-window -h                 # Назначаем другую
bind '\' split-window -h               # Назначаем другую
unbind '"'                             # Тоже самое, только по вертикали
bind - split-window -v                 # ----

bind-key x kill-pane                   # закрытие панели без подтверждения

# Make middle-mouse-click paste from the primary selection (without having to hold down Shift).
# bind-key -n MouseDown2Pane run "tmux set-buffer -b primary_selection \"$(xsel -o)\"; tmux paste-buffer -b primary_selection; tmux delete-buffer -b primary_selection"

#######################################################
#                                                     #
#  ######    ###  ####  ###### ##  ## ##  ## ##   ##  #
#  ##  ##   # ## ##  ## ##     ##  ## ##  ## ##   ##  #
#  ##  ##  #  ## ###### ##     ## ### ###### #### ##  #
#  ##  ## ##  ## ##  ## ##     ### ## ##  ## ## # ##  #
#  ##  ## ##  ## ##  ## ##     ##  ## ##  ## #### ##  #
#                                                     #
#######################################################

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# As an extra, install the following plugins to save and restore your tmux sessions any time.
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
# set -g @resurrect-capture-pane-contents 'on' ## Restore Panes
set -g @continuum-restore 'on'                 ## Restore last saved environment
set -g @continuum-save-interval '10'           ##interval

# FPP
set -g @plugin 'tmux-plugins/tmux-fpp'
set -g @fpp-key tab
set -g @fpp-mode 'paste'

set -g @plugin 'fcsonline/tmux-thumbs'


set -g @plugin 'tmux-plugins/tmux-yank'

# o - "open" a highlighted selection with the system default program. open for OS X or xdg-open for Linux.
# Ctrl-o - open a highlighted selection with the $EDITOR
# Shift-s - search the highlighted selection directly inside a search engine (defaults to google).
set -g @plugin 'tmux-plugins/tmux-open'

run '$HOME/.config/tmux/plugins/tpm/tpm'
